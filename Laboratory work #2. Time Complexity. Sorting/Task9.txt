973. K Closest Points to Origin
LeetCode: https://leetcode.com/problems/k-closest-points-to-origin/

class Solution {
    public int[][] kClosest(int[][] points, int K) {
        int [][] result = new int [K][2];
        Point [] myPoints = new Point [points.length];
        
        for(int i = 0; i < points.length; i++) {
            myPoints[i] = new Point(i, (int)(Math.pow(points[i][0], 2) + Math.pow(points[i][1], 2)));  
        }
        
        Arrays.sort(myPoints, new PointComparator());
        
        for(int i = 0; i < K; i++) {
            int j = myPoints[i].index;
            result[i][0] = points[j][0];
            result[i][1] = points[j][1];
        }
        
        return result;
        
    }
    
    class Point {
        int index;
        int length;
        
        Point(){}
        Point(int i, int l){
            index = i;
            length = l;
        }
    }
    
    class PointComparator implements Comparator<Point>{ 
              
            public int compare(Point s1, Point s2) { 
                if (s1.length > s2.length) 
                    return 1; 
                else if (s1.length < s2.length) 
                    return -1; 
                                return 0; 
                } 
        }
    
    }
